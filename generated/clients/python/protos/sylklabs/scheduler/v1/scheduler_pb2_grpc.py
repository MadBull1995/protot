# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sylklabs.scheduler.v1 import scheduler_pb2 as sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2


class SchedulerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Execute = channel.unary_unary(
                '/sylklabs.scheduler.v1.SchedulerService/Execute',
                request_serializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ExecuteResponse.FromString,
                )
        self.Schedule = channel.unary_unary(
                '/sylklabs.scheduler.v1.SchedulerService/Schedule',
                request_serializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ScheduleResponse.FromString,
                )


class SchedulerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Execute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Schedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ExecuteRequest.FromString,
                    response_serializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ExecuteResponse.SerializeToString,
            ),
            'Schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.Schedule,
                    request_deserializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ScheduleRequest.FromString,
                    response_serializer=sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ScheduleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sylklabs.scheduler.v1.SchedulerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sylklabs.scheduler.v1.SchedulerService/Execute',
            sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ExecuteRequest.SerializeToString,
            sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ExecuteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sylklabs.scheduler.v1.SchedulerService/Schedule',
            sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ScheduleRequest.SerializeToString,
            sylklabs_dot_scheduler_dot_v1_dot_scheduler__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
